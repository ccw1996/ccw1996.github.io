"use strict";(self.webpackChunkblog_sample=self.webpackChunkblog_sample||[]).push([[8275],{8453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>o});var r=n(6540);const s={},c=r.createContext(s);function i(t){const e=r.useContext(c);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),r.createElement(c.Provider,{value:e},t.children)}},9561:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"cpp/CRTP","title":"CRTP","description":"\u4ee5 Base: Base \u4e2d\uff0c Base \u662f\u5148\u4e8e Derived \u800c\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u5f53 Base::implementation() \u7684\u58f0\u660e\u4e86\u3002","source":"@site/docs/cpp/CRTP.md","sourceDirName":"cpp","slug":"/cpp/CRTP","permalink":"/docs/cpp/CRTP","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/docs/cpp/CRTP.md","tags":[{"inline":true,"label":"work","permalink":"/docs/tags/work"}],"version":"current","lastUpdatedAt":1740785860000,"frontMatter":{"title":"CRTP","tags":["work"],"editor":"caroot"},"sidebar":"tutorialSidebar","previous":{"title":"\u603b\u7ed3 C/C++ \u77e5\u8bc6","permalink":"/docs/cpp/summarycpp"},"next":{"title":"STL","permalink":"/docs/cpp/STL/"}}');var s=n(4848),c=n(8453);const i={title:"CRTP",tags:["work"],editor:"caroot"},o="\u9759\u6001\u591a\u6001\uff08Static polymorphism\uff09\u3002",a={},l=[];function d(t){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u9759\u6001\u591a\u6001static-polymorphism",children:(0,s.jsx)(e.strong,{children:"\u9759\u6001\u591a\u6001\uff08Static polymorphism\uff09\u3002"})})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"\t\t  template <class T> \n\t\t  struct Base\n\t\t  {\n\t\t      void interface()\n\t\t      {\n\t\t          // ...\n\t\t          static_cast<T*>(this)->implementation();\n\t\t          // ...\n\t\t      }\n\t\t  \n\t\t      static void static_func()\n\t\t      {\n\t\t          // ...\n\t\t          T::static_sub_func();\n\t\t          // ...\n\t\t      }\n\t\t  };\n\t\t  \n\t\t  struct Derived : Base<Derived>\n\t\t  {\n\t\t      void implementation()\uff1b\n\t\t  \n\t\t      static void static_sub_func();\n\t\t  };\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u4ee5 ",(0,s.jsx)(e.code,{children:"Base<Derived>::interface()"})," \xa0\u4e3a\u4f8b\uff0c\u5728 ",(0,s.jsx)(e.code,{children:"Derived : Base<Derived>"})," \u4e2d\uff0c ",(0,s.jsx)(e.code,{children:"Base<Derived>"})," \u662f\u5148\u4e8e ",(0,s.jsx)(e.code,{children:"Derived"})," \u800c\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u5f53 ",(0,s.jsx)(e.code,{children:"Base<Derived>::interface()"})," \u88ab\u7533\u660e\u65f6\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u77e5\u9053 ",(0,s.jsx)(e.code,{children:"Derived"})," \u7684\u5b58\u5728\u7684\uff0c\u4f46\u7531\u4e8e\u6b64\u65f6\xa0",(0,s.jsx)(e.code,{children:"Base<Derived>::interface()"}),"\xa0\u5e76\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316\u3002\u53ea\u6709\u5f53 ",(0,s.jsx)(e.code,{children:"Base<Derived>::interface()"})," \u88ab\u8c03\u7528\u65f6\uff0c\u624d\u4f1a\u88ab\u5b9e\u4f8b\u5316\uff0c\u800c\u6b64\u65f6\u7f16\u8bd1\u5668\u4e5f\u5df2\u7ecf\u77e5\u9053\u4e86\xa0 ",(0,s.jsx)(e.code,{children:"Derived::implementation()"})," \u7684\u58f0\u660e\u4e86\u3002"]}),"\n",(0,s.jsx)(e.h1,{id:"\u8f7b\u677e\u5730\u5b9e\u73b0\u5404\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u521b\u5efa\u548c\u6790\u6784\u72ec\u7acb\u7684\u8ba1\u6570",children:(0,s.jsx)(e.strong,{children:"\u8f7b\u677e\u5730\u5b9e\u73b0\u5404\u4e2a\u5b50\u7c7b\u5b9e\u4f8b\u521b\u5efa\u548c\u6790\u6784\u72ec\u7acb\u7684\u8ba1\u6570"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"\t\t  template <typename T>\n\t\t  struct counter\n\t\t  {\n\t\t      static int objects_created;\n\t\t      static int objects_alive;\n\t\t  \n\t\t      counter()\n\t\t      {\n\t\t          ++objects_created;\n\t\t          ++objects_alive;\n\t\t      }\n\t\t      \n\t\t      counter(const counter&)\n\t\t      {\n\t\t          ++objects_created;\n\t\t          ++objects_alive;\n\t\t      }\n\t\t  protected:\n\t\t      ~counter() // objects should never be removed through pointers of this type\n\t\t      {\n\t\t          --objects_alive;\n\t\t      }\n\t\t  };\n\t\t  template <typename T> int counter<T>::objects_created( 0 );\n\t\t  template <typename T> int counter<T>::objects_alive( 0 );\n\t\t  \n\t\t  class X : counter<X>\n\t\t  {\n\t\t      // ...\n\t\t  };\n\t\t  \n\t\t  class Y : counter<Y>\n\t\t  {\n\t\t      // ...\n\t\t  };\n"})}),"\n",(0,s.jsx)(e.h1,{id:"3-\u591a\u6001\u94fepolymorphic-chaining",children:(0,s.jsx)(e.strong,{children:"3. \u591a\u6001\u94fe\uff08Polymorphic chaining\uff09"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"\t\t  class Printer\n\t\t  {\n\t\t  public:\n\t\t      Printer(ostream& pstream) : m_stream(pstream) {}\n\t\t   \n\t\t      template <typename T>\n\t\t      Printer& print(T&& t) { m_stream << t; return *this; }\n\t\t   \n\t\t      template <typename T>\n\t\t      Printer& println(T&& t) { m_stream << t << endl; return *this; }\n\t\t  private:\n\t\t      ostream& m_stream;\n\t\t  };\n\t\t  \n\t\t  class CoutPrinter : public Printer\n\t\t  {\n\t\t  public:\n\t\t      CoutPrinter() : Printer(cout) {}\n\t\t  \n\t\t      CoutPrinter& SetConsoleColor(Color c)\n\t\t      {\n\t\t          // ...\n\t\t          return *this;\n\t\t      }\n\t\t  };\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u4e0a\u9762Printer\u5b9a\u4e49\u6253\u5370\u7684\u65b9\u6cd5\uff0c ",(0,s.jsx)(e.code,{children:"CoutPrinter"})," \u662f ",(0,s.jsx)(e.code,{children:"Printer"})," \u7684\u5b50\u7c7b\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e86\u4e00\u4e2a\u8bbe\u7f6e\u6253\u5370\u989c\u8272\u7684\u65b9\u6cd5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\uff1a"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'\t\t  CoutPrinter().print("Hello ").SetConsoleColor(Color.red).println("Printer!");\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u524d\u534a\u6bb5 ",(0,s.jsx)(e.code,{children:'CoutPrinter().print("Hello ")'})," \u8c03\u7528\u7684\u662f ",(0,s.jsx)(e.code,{children:"Printer"})," \u5b9e\u4f8b\uff0c\u540e\u9762\u63a5\u7740 ",(0,s.jsx)(e.code,{children:"SetConsoleColor(Color.red)"})," \u5b9e\u9645\u4e0a\u53c8\u9700\u8981\u8c03\u7528 ",(0,s.jsx)(e.code,{children:"CoutPrinter"})," \u5b9e\u4f8b\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:'\t\t  // Base class\n\t\t  template <typename ConcretePrinter>\n\t\t  class Printer\n\t\t  {\n\t\t  public:\n\t\t      Printer(ostream& pstream) : m_stream(pstream) {}\n\t\t   \n\t\t      template <typename T>\n\t\t      ConcretePrinter& print(T&& t)\n\t\t      {\n\t\t          m_stream << t;\n\t\t          return static_cast<ConcretePrinter&>(*this);\n\t\t      }\n\t\t   \n\t\t      template <typename T>\n\t\t      ConcretePrinter& println(T&& t)\n\t\t      {\n\t\t          m_stream << t << endl;\n\t\t          return static_cast<ConcretePrinter&>(*this);\n\t\t      }\n\t\t  private:\n\t\t      ostream& m_stream;\n\t\t  };\n\t\t   \n\t\t  // Derived class\n\t\t  class CoutPrinter : public Printer<CoutPrinter>\n\t\t  {\n\t\t  public:\n\t\t      CoutPrinter() : Printer(cout) {}\n\t\t   \n\t\t      CoutPrinter& SetConsoleColor(Color c)\n\t\t      {\n\t\t          // ...\n\t\t          return *this;\n\t\t      }\n\t\t  };\n\t\t   \n\t\t  // usage\n\t\t  CoutPrinter().print("Hello ").SetConsoleColor(Color.red).println("Printer!");\n'})}),"\n",(0,s.jsx)(e.h1,{id:"4-\u591a\u6001\u7684\u590d\u5236\u6784\u9020\u4f53polymorphic-copy-construction",children:(0,s.jsx)(e.strong,{children:"4. \u591a\u6001\u7684\u590d\u5236\u6784\u9020\u4f53\uff08Polymorphic copy construction\uff09\u3002"})}),"\n",(0,s.jsxs)(e.p,{children:["\u5f53\u6211\u4eec\u7528\u5230\u591a\u6001\u65f6\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6765\u590d\u5236\u5b50\u5bf9\u8c61\u3002\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u57fa\u7c7b\u91cc\u9762\u6784\u9020\u4e00\u4e2a ",(0,s.jsx)(e.code,{children:"clone()"})," \u865a\u51fd\u6570\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u5b50\u7c7b\u91cc\u9762\u5b9a\u4e49\u8fd9\u4e2a ",(0,s.jsx)(e.code,{children:"clone()"})," \u51fd\u6570\u3002\u4f7f\u7528CRTP\u53ef\u4ee5\u8ba9\u6211\u4eec\u907f\u514d\u53cd\u590d\u5730\u5728\u5b50\u7c7b\u4e2d\u53bb\u5b9a\u4e49 ",(0,s.jsx)(e.code,{children:"clone()"})," \u51fd\u6570\u3002"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",children:"\t\t  // Base class has a pure virtual function for cloning\n\t\t  class AbstractShape {\n\t\t  public:\n\t\t    virtual ~AbstractShape () = default;\n\t\t    virtual std::unique_ptr<AbstractShape> clone() const = 0;\n\t\t  };\n\t\t  - // This CRTP class implements clone() for Derived\n\t\t  template <typename Derived>\n\t\t  class Shape : public AbstractShape {\n\t\t  public:\n\t\t    std::unique_ptr<AbstractShape> clone() const override {\n\t\t        return std::make_unique<Derived>(static_cast<Derived const&>(*this));\n\t\t    }\n\t\t  - protected:\n\t\t   // We make clear Shape class needs to be inherited\n\t\t   Shape() = default;\n\t\t   Shape(const Shape&) = default;\n\t\t  };\n\t\t  - // Every derived class inherits from CRTP class instead of abstract class\n\t\t  - class Square : public Shape<Square>{};\n\t\t  - class Circle : public Shape<Circle>{};\n"})})]})}function p(t={}){const{wrapper:e}={...(0,c.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}}}]);